/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoodManagerRole;

import GlobalEcoSystem.EcoSystem;
import GlobalEcoSystem.Pharmacy.Pharmacy;
import GlobalEcoSystem.Pharmacy.PharmacyDirectory;
import GlobalEcoSystem.PharmacyMenu.PMenu;
import GlobalEcoSystem.PharmacyMenu.PMenuDirectory;


import GlobalEcoSystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ManageHotelMenu extends javax.swing.JPanel {

    /**
     * Creates new form ManageHotelMenu
     */
      private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private PharmacyDirectory pharmacyDirectory;
    private PMenuDirectory pmenuDirectory;
    private Pharmacy pharmacy;
    public ManageHotelMenu(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem,
                           PharmacyDirectory pharmacyDirectory, PMenuDirectory pmenuDirectory) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.pharmacyDirectory = ecoSystem.getPharmacyDirectory();
        this.pmenuDirectory = ecoSystem.getpMenuDirectory();
        populateTable();
    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) jjTable1.getModel();
        dtm.setRowCount(0);
        for(PMenu menu : pmenuDirectory.getPmenuDirectory()){
            if(menu.getPharmaName() != null && menu.getPharmaName().equals(account.getEmployee().getName())) {
                Object [] row = new Object[1];
                row[0] = menu;
        
                dtm.addRow(row);
            }
        }


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jjTable1 = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        itemjText = new javax.swing.JTextField();
        addjButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        deletejButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(36, 35, 41));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item"
            }
        ));
        jScrollPane1.setViewportView(jjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 390, 128));

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        BackButton.setForeground(new java.awt.Color(0, 102, 204));
        BackButton.setText("<< BACK");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 540, -1, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Item:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, -1, -1));

        itemjText.setBackground(new java.awt.Color(36, 35, 41));
        add(itemjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 240, -1));

        addjButton.setBackground(new java.awt.Color(0, 102, 204));
        addjButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        addjButton.setForeground(new java.awt.Color(255, 255, 255));
        addjButton.setText("Add Item");
        addjButton.setBorderPainted(false);
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });
        add(addjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 110, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Create Menu");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, -1, -1));

        deletejButton.setBackground(new java.awt.Color(0, 102, 204));
        deletejButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        deletejButton.setForeground(new java.awt.Color(255, 255, 255));
        deletejButton.setText("Delete Item");
        deletejButton.setBorderPainted(false);
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });
        add(deletejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 540, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
        
        if(itemjText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty");
            return;
        }
        
        String itemName = itemjText.getText();
      
        
        String res = account.getEmployee().getName();
        
        pmenuDirectory.newItem(itemName, res);
        populateTable();
    }//GEN-LAST:event_addjButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
        //DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
          int selectedRow = jjTable1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }

        PMenu menu = (PMenu) jjTable1.getValueAt(selectedRow, 0);
        pmenuDirectory.removeMenu(menu);
        populateTable();
    }//GEN-LAST:event_deletejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton addjButton;
    private javax.swing.JButton deletejButton;
    private javax.swing.JTextField itemjText;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jjTable1;
    // End of variables declaration//GEN-END:variables
}
