/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoundationRole;

//import Business.Customer.Customer;
import GlobalEcoSystem.Driver.Driver;
import GlobalEcoSystem.EcoSystem;
import GlobalEcoSystem.Enterprise.Enterprise;
import GlobalEcoSystem.Network.Network;
import GlobalEcoSystem.Org.PopulationOrganization;
import GlobalEcoSystem.Person.Person;
import GlobalEcoSystem.UserAccount.UserAccount;
import GlobalEcoSystem.WorkQueue.DriverWorkRequest;
import GlobalEcoSystem.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZonedDateTime;

import javamailapp.javamail.JavaMailSystem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class CabJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CabJPanel
     */
    private JPanel userProcessContainer;
private EcoSystem ecoSystem;
private UserAccount account;
private DriverWorkRequest dreq;
private Enterprise ent;
private PopulationOrganization organization;
private Network network;
public CabJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem,DriverWorkRequest dreq,Enterprise ent,Network network,PopulationOrganization organization) {
initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.dreq = dreq;
        this.organization = organization;
        this.ent = ent;
        this.network = network;
        populateSeatsCombo();
        populateRequestTable();
    }
    
     public void populateSeatsCombo() {
        selectssComboBox.removeAllItems();
        //selectComboBox.addItem(" ");
        
        for(Driver res : ecoSystem.getDriverDirectory().getDriverDirectory()) {
            System.out.println("res" + res);
            
            //selectComboBox.addItem(Integer.parseInt(res.getSeats())); String.valueOf(i)
            selectssComboBox.addItem(String.valueOf(res.getSeats()));
           
        }
    }
     
      public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) jTaable1.getModel();
        model.setRowCount(0);
        //for (Gene g : ((LabTestWorkRequest) request).getPatient().getGeneHistory().getGeneHistory()) {
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
        if (request instanceof DriverWorkRequest) {
        //DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        // if(account.getEmployee().getName().equals(((DriverWorkRequest) dreq).getPerson().getName())) {
        Object[] row = new Object[5];
        row[0] = ((DriverWorkRequest) request).getPerson().getName();
        row[1] = ((DriverWorkRequest) request).getDestin();
        row[2] =((DriverWorkRequest) request).getDate();
        row[3] = ((DriverWorkRequest) request).getTime();
        row[4] = ((DriverWorkRequest) request);
        model.addRow(row);
//}
}
        
       /* for (DriverWorkRequest order : this.ecoSystem.getDriverDirectory().getDriverDirectory()){
            System.out.println("Order" + order.getOrderId());
            if(account.getEmployee().getName().equals(order.getCustomer().getName())) {
                Object[] row = new Object[7];
        
        DriverWorkRequest order = (DriverWorkRequest)jTable1.getValueAt(selectedRow, 0);
        order.setMessage(EDText.getText());
         populateRequestTable();*/
       }
       }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        bookacab = new javax.swing.JLabel();
        backjjButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTaable1 = new javax.swing.JTable();
        bookjButton = new javax.swing.JButton();
        EDdText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        selectssComboBox = new javax.swing.JComboBox<>();
        datesTimeePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();

        setBackground(new java.awt.Color(36, 35, 41));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Time");
        jLabel5.setBackground(new java.awt.Color(0, 102, 204));
        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 260, -1, -1));

        bookacab.setText("Schedule Pickup");
        bookacab.setBackground(new java.awt.Color(255, 255, 255));
        bookacab.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        bookacab.setForeground(new java.awt.Color(255, 255, 255));
        add(bookacab, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        backjjButton.setText("<< BACK");
        backjjButton.setBackground(new java.awt.Color(247, 247, 247));
        backjjButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        backjjButton.setBorderPainted(false);
        backjjButton.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        backjjButton.setForeground(new java.awt.Color(0, 102, 204));
        backjjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjjButtonActionPerformed(evt);
            }
        });
        add(backjjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 670, 80, 30));

        jLabel3.setText("Destination:");
        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, -1, -1));

        jLabel4.setText("Date");
        jLabel4.setBackground(new java.awt.Color(0, 102, 204));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 260, 62, -1));

        jTaable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "To", "Date", "Time", "Status"
            }
        ));
        jTaable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTaable1.setSelectionForeground(new java.awt.Color(102, 204, 255));
        jScrollPane1.setViewportView(jTaable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, 730, 132));

        bookjButton.setText("Book");
        bookjButton.setBackground(new java.awt.Color(0, 102, 204));
        bookjButton.setBorderPainted(false);
        bookjButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        bookjButton.setForeground(new java.awt.Color(255, 255, 255));
        bookjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookjButtonActionPerformed(evt);
            }
        });
        add(bookjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 190, 40));

        EDdText.setBackground(new java.awt.Color(35, 36, 39));
        EDdText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDdTextActionPerformed(evt);
            }
        });
        add(EDdText, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 470, 50));

        jLabel6.setText("Seats:");
        jLabel6.setBackground(new java.awt.Color(0, 102, 204));
        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        selectssComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Seats" }));
        selectssComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectssComboBoxActionPerformed(evt);
            }
        });
        add(selectssComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 110, 50));

        datesTimeePicker1.setForeground(new java.awt.Color(36, 35, 39));
        add(datesTimeePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 290, 290, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void EDdTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDdTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EDdTextActionPerformed

    private void selectssComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectssComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectssComboBoxActionPerformed

    private void bookjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookjButtonActionPerformed
        // TODO add your handling code here:
      // DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
       //System.out.println(LocalDate.now().format(formatter));
      LocalDate dt = LocalDate.from(ZonedDateTime.now());
        System.out.println(dt);
       
         if(EDdText.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null,"Please enter destination address", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }
         
         if (datesTimeePicker1.datePicker.getDate() == null || datesTimeePicker1.timePicker.getTime() == null || dt.compareTo(datesTimeePicker1.datePicker.getDate()) > 0 )
         {
             JOptionPane.showMessageDialog(null,"Please pick valid date and time", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
         }
         
      /*   if (dt.compareTo(dateTimePicker1.datePicker.getDate()) < 0 )
         {
             JOptionPane.showMessageDialog(null,"Please pick date and time", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
         }*/
         
        // if (dateTimePicker1.datePicker.getDate().compareTo(LocalDate.now().format(formatter)))
         
         System.out.println(datesTimeePicker1.datePicker.getDate());
        // System.out.println(objSDF.format(objDate));
        String destin = EDdText.getText();
        Person person = ecoSystem.getPersonDirectory().getPerson(account.getEmployee().getName());
        //String customer = ((DriverWorkRequest) dreq).getPerson().getName();
        //Person address = ecoSystem.getPersonDirectory().getPerson(account.getEmployee().getAddress());
         String seats = selectssComboBox.getSelectedItem().toString();
        LocalDate date = datesTimeePicker1.getDatePicker().getDate();
        LocalTime time = datesTimeePicker1.getTimePicker().getTime();
        String status = "Cab Requested";
        DriverWorkRequest dreq = new DriverWorkRequest();
        dreq.setSeats(seats);
        dreq.setPerson(person);
        dreq.setDestin(destin);
        dreq.setDate(date);
        dreq.setTime(time);
        dreq.setDstatus(status);

        account.getWorkQueue().getWorkRequestList().add(dreq);
        ecoSystem.getWorkQueue().getWorkRequestList().add(dreq);

        JOptionPane.showMessageDialog(null,"You have successfully requested a cab. Please wait for the driver to accept");
        populateRequestTable();
        try {
                JavaMailSystem.sendMail("kashyapdatta@gmail.com","Cab Requested","You have successfully requested for a cab on"+" " +date+" "+ "at"+" "+ time +" "+ "to"+" "+ destin+" "+"Please wait for the doctor to accept it");
           } catch (Exception ex) {
               //Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
          }
        try {
                JavaMailSystem.sendMail("kashyapdatta@gmail.com","New Appointment Request","You have been requested for an cab on"+" " +date+" "+"at"+" "+ time +" "+ "to"+" "+ destin+" "+ "Please login to the app to accept the ride");
           } catch (Exception ex) {
               //Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
          }
        }
    
    private void backkButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        

         
    }//GEN-LAST:event_bookjButtonActionPerformed

    private void backjjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjjButtonActionPerformed
        // TODO add your handling code here:
               userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        FoundationPortal a = (FoundationPortal) component;
        //a.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EDdText;
    private javax.swing.JButton backjjButton;
    private javax.swing.JLabel bookacab;
    private javax.swing.JButton bookjButton;
    private com.github.lgooddatepicker.components.DateTimePicker datesTimeePicker1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTaable1;
    private javax.swing.JComboBox<String> selectssComboBox;
    // End of variables declaration//GEN-END:variables
}
