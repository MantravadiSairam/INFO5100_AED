/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoundationRole;


import GlobalEcoSystem.Doctor.Doctor;
import GlobalEcoSystem.EcoSystem;
import GlobalEcoSystem.Enterprise.Enterprise;
import GlobalEcoSystem.Network.Network;
import GlobalEcoSystem.Org.PopulationOrganization;
import GlobalEcoSystem.Person.Person;
import GlobalEcoSystem.UserAccount.UserAccount;
import GlobalEcoSystem.WorkQueue.DoctorWorkRequest;
import GlobalEcoSystem.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import java.awt.Component;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.table.DefaultTableModel;
import java.time.ZonedDateTime;
import javamailapp.javamail.JavaMailSystem;
public class DocJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DocJPanel
     */
            private JPanel userProcessContainer;
        private EcoSystem ecoSystem;
        private UserAccount account;
        private DoctorWorkRequest docreq;
        private Enterprise ent;
        private PopulationOrganization organization;
        private Network network;

    
    public DocJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem,DoctorWorkRequest docreq,Enterprise ent,Network network,PopulationOrganization organization) {
                 initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.docreq = docreq;
        this.organization = organization;
        this.ent = ent;
        this.network = network;
        populateSpeciality();
        populateRequestTable();
    }
      public void populateDocCombo() {
        boxjDoctor.removeAllItems();     
        for(Doctor doc : ecoSystem.getDoctorDirectory().getDoctorDirectory()) {
            System.out.println("doc" + doc);
            try{
            if(doc.getSpeciality().equalsIgnoreCase(combojSpeciality.getSelectedItem().toString()))
            //selectComboBox.addItem(Integer.parseInt(res.getSeats())); String.valueOf(i)
            boxjDoctor.addItem(String.valueOf(doc.getName()));
            }catch(Exception e){}
        }
    }
      
      public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) jTable1jj.getModel();
        model.setRowCount(0);
        //for (Gene g : ((LabTestWorkRequest) request).getPatient().getGeneHistory().getGeneHistory()) {
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()){
        if (request instanceof DoctorWorkRequest) {
        //DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
        // if(account.getEmployee().getName().equals(((DriverWorkRequest) dreq).getPerson().getName())) {
        Object[] row = new Object[5];
        row[0] = ((DoctorWorkRequest) request).getPerson().getName();
        row[1] = ((DoctorWorkRequest) request).getSpec();
        row[2] =((DoctorWorkRequest) request).getDate();
        row[3] = ((DoctorWorkRequest) request).getTime();
        row[4] = ((DoctorWorkRequest) request);
        model.addRow(row);
//}
}
        }
    
       }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookacab = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BookjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1jj = new javax.swing.JTable();
        enterprisejLabel2 = new javax.swing.JLabel();
        boxjDoctor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        dateTimejPicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        btnjBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        combojSpeciality = new javax.swing.JComboBox<>();
        bookacab1 = new javax.swing.JLabel();

        bookacab.setText("Schedule Pickup");
        bookacab.setBackground(new java.awt.Color(255, 255, 255));
        bookacab.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        bookacab.setForeground(new java.awt.Color(255, 255, 255));

        setBackground(new java.awt.Color(36, 35, 41));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Select Date  And Time");
        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, -1, -1));

        BookjButton.setText("Set Appointment");
        BookjButton.setBackground(new java.awt.Color(0, 102, 204));
        BookjButton.setBorderPainted(false);
        BookjButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        BookjButton.setForeground(new java.awt.Color(255, 255, 255));
        BookjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookjButtonActionPerformed(evt);
            }
        });
        add(BookjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 230, 50));

        jTable1jj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Doctor", "Date", "Time", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1jj);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 860, 180));

        enterprisejLabel2.setText("Appointment details:");
        enterprisejLabel2.setBackground(new java.awt.Color(237, 235, 235));
        enterprisejLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterprisejLabel2.setForeground(new java.awt.Color(255, 255, 255));
        add(enterprisejLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 205, 30));

        boxjDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(boxjDoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 150, 40));

        jLabel4.setText("Select Doctor");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));
        add(dateTimejPicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 340, -1, -1));

        btnjBack.setText("Back");
        btnjBack.setBackground(new java.awt.Color(255, 255, 255));
        btnjBack.setBorderPainted(false);
        btnjBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnjBack.setForeground(new java.awt.Color(0, 102, 204));
        btnjBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjBackActionPerformed(evt);
            }
        });
        add(btnjBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 710, -1, -1));

        jLabel1.setText("Select Speciality");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, -1, 20));

        combojSpeciality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combojSpeciality.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combojSpecialityItemStateChanged(evt);
            }
        });
        combojSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combojSpecialityActionPerformed(evt);
            }
        });
        add(combojSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 150, 40));

        bookacab1.setText("Book an Appointment");
        bookacab1.setBackground(new java.awt.Color(255, 255, 255));
        bookacab1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        bookacab1.setForeground(new java.awt.Color(255, 255, 255));
        add(bookacab1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void selectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectComboBoxActionPerformed

    private void btnjBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        FoundationPortal a = (FoundationPortal) component;
        //a.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnjBackActionPerformed

    private void BookjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookjButtonActionPerformed
        // TODO add your handling code here:
        /*  if(EDText.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null,"Please enter destination address", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
        }*/
       // String destin = EDText.getText();
       LocalDate dt = LocalDate.from(ZonedDateTime.now());
       if (dateTimejPicker1.datePicker.getDate() == null || dateTimejPicker1.timePicker.getTime() == null || dt.compareTo(dateTimejPicker1.datePicker.getDate()) > 0 )
         {
             JOptionPane.showMessageDialog(null,"Please pick valid date and time", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
         }
       String spec = boxjDoctor.getSelectedItem().toString();
       
        Person person = ecoSystem.getPersonDirectory().getPerson(account.getEmployee().getName());
          LocalDate date = dateTimejPicker1.getDatePicker().getDate();
        LocalTime time = dateTimejPicker1.getTimePicker().getTime();
        String status = "Doctor Requested";
        //Doctor doc = 
        DoctorWorkRequest docreq = new DoctorWorkRequest();
        docreq.setPerson(person);
        docreq.setSpec(spec);
        docreq.setDate(date);
        docreq.setTime(time);
        docreq.setDocstatus(status);
        
        account.getWorkQueue().getWorkRequestList().add(docreq);
        ecoSystem.getWorkQueue().getWorkRequestList().add(docreq);
        populateRequestTable();
        JOptionPane.showMessageDialog(null,"You have successfully requested for an appointment. Please wait for the doctor to accept it");
        try {
                JavaMailSystem.sendMail("kashyapdatta@gmail.com","Doctor Appointment Requested","You have successfully requested for an appointment on"+" " +date+" "+ "Please wait for the driver to accept it");
           } catch (Exception ex) {
               //Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
          }
        try {
                JavaMailSystem.sendMail("kashyapdatta@gmail.com","New Appointment Request","You have been requested for an appointment on"+" " +date+" "+ "Please login to the app to accept it");
           } catch (Exception ex) {
               //Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
          }

    }//GEN-LAST:event_BookjButtonActionPerformed

    private void combojSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combojSpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combojSpecialityActionPerformed

    private void combojSpecialityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combojSpecialityItemStateChanged
        // TODO add your handling code here:
        System.out.println("Speciality triggered");
        populateDocCombo();
        
    }//GEN-LAST:event_combojSpecialityItemStateChanged

    public void populateSpeciality(){
        combojSpeciality.removeAllItems();
        try{
        for(Doctor doc : ecoSystem.getDoctorDirectory().getDoctorDirectory()) {
            System.out.println("doc" + doc);
            combojSpeciality.addItem(String.valueOf(doc.getSpeciality()));
            
        }
        }catch(Exception e){}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookjButton;
    private javax.swing.JLabel bookacab;
    private javax.swing.JLabel bookacab1;
    private javax.swing.JComboBox<String> boxjDoctor;
    private javax.swing.JButton btnjBack;
    private javax.swing.JComboBox<String> combojSpeciality;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimejPicker1;
    private javax.swing.JLabel enterprisejLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1jj;
    // End of variables declaration//GEN-END:variables
}
