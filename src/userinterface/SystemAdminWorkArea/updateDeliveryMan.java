/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import GlobalEcoSystem.DeliveryMan.DeliveryMan;
import GlobalEcoSystem.DeliveryMan.DeliveryManDirectory;
import GlobalEcoSystem.EcoSystem;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class updateDeliveryMan extends javax.swing.JPanel {

     private JPanel userProcessContainer; 
    private EcoSystem ecoSystem; 
    private DeliveryManDirectory deliveryManDirectory;
    private DeliveryMan deliveryMan;
    public updateDeliveryMan(JPanel userProcessContainer, EcoSystem ecoSystem, DeliveryManDirectory deliveryManDirectory, DeliveryMan deliveryMan) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.deliveryManDirectory = ecoSystem.getDeliverymanDirectory();
        this.ecoSystem = ecoSystem;
        this.deliveryMan = deliveryMan;
        nameTjext.setText(deliveryMan.getName());
        emailjText.setText(deliveryMan.getEmail());
        addjText.setText(deliveryMan.getAddress());
        mobilejText.setText(deliveryMan.getPhoneNumber());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mobileLable = new javax.swing.JLabel();
        emailLable = new javax.swing.JLabel();
        addLable1 = new javax.swing.JLabel();
        nameTjext = new javax.swing.JTextField();
        mobilejText = new javax.swing.JTextField();
        emailjText = new javax.swing.JTextField();
        addjText = new javax.swing.JTextField();
        TitleLab = new javax.swing.JLabel();
        nameLable = new javax.swing.JLabel();
        updatejButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(36, 35, 39));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mobileLable.setText("Mobile:");
        add(mobileLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, 54, -1));

        emailLable.setText("Email:");
        add(emailLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 54, -1));

        addLable1.setText("Address:");
        add(addLable1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 430, 54, -1));

        nameTjext.setBackground(new java.awt.Color(36, 35, 39));
        nameTjext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTjextActionPerformed(evt);
            }
        });
        add(nameTjext, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, 220, 30));

        mobilejText.setBackground(new java.awt.Color(36, 35, 39));
        mobilejText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobilejTextActionPerformed(evt);
            }
        });
        add(mobilejText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 310, 220, 30));

        emailjText.setBackground(new java.awt.Color(36, 35, 39));
        emailjText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailjTextActionPerformed(evt);
            }
        });
        add(emailjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 380, 220, 30));

        addjText.setBackground(new java.awt.Color(36, 35, 39));
        addjText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjTextActionPerformed(evt);
            }
        });
        add(addjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 220, 120));

        TitleLab.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        TitleLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLab.setText("Update Delivery Person");
        add(TitleLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 450, -1));

        nameLable.setText("Name:");
        add(nameLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, 54, -1));

        updatejButton.setBackground(new java.awt.Color(0, 51, 153));
        updatejButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        updatejButton.setText("Update Details");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });
        add(updatejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 590, 185, 50));

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setForeground(new java.awt.Color(0, 0, 0));
        BackButton.setText("<<Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 660, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void nameTjextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTjextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTjextActionPerformed

    private void mobilejTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobilejTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobilejTextActionPerformed

    private void emailjTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailjTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailjTextActionPerformed

    private void addjTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addjTextActionPerformed

    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        // TODO add your handling code here:
        String mobile = mobilejText.getText();
        String email = emailjText.getText();

        if (nameTjext.getText().isEmpty() || !nameTjext.getText().matches("^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$"))
        JOptionPane.showMessageDialog(null, "Please enter valid name");

        if(!(mobilejText.getText().length()==10) || !mobilejText.getText().matches("^[0-9]+") || mobilejText.getText().matches("[0]{10}"))
        JOptionPane.showMessageDialog(null, "enter valid mobile number");

        for(DeliveryMan deliveryMan : deliveryManDirectory.getDeliveryManDirectory()) {

            if(deliveryMan.getPhoneNumber().equals(mobile) && this.deliveryMan != deliveryMan) {
                JOptionPane.showMessageDialog(null, "Mobile Number already exists");
            }
        }

        if(emailjText.getText().isEmpty()|| !(emailjText.getText().trim().contains("@") && emailjText.getText().trim().contains(".")))
        JOptionPane.showMessageDialog(null, "Enter valid email address");
        for(DeliveryMan deliveryMan : deliveryManDirectory.getDeliveryManDirectory()) {

            if(deliveryMan.getEmail().equals(email) && this.deliveryMan != deliveryMan) {
                JOptionPane.showMessageDialog(null, "Email already exists");
            }
        }

        if (addjText.getText().isEmpty())
        JOptionPane.showMessageDialog(null, "Please enter address");

        deliveryMan.setPhoneNumber(mobilejText.getText());
        deliveryMan.setAddress(addjText.getText());
        deliveryMan.setName(nameTjext.getText());
        deliveryMan.setEmail(emailjText.getText());

        JOptionPane.showMessageDialog(null, "deliveryMan Profile Updated");
    }//GEN-LAST:event_updatejButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        // customerOp customer = (customerOp) component;
        manageDeliveryMan u = (manageDeliveryMan) component;
        u.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel TitleLab;
    private javax.swing.JLabel addLable1;
    private javax.swing.JTextField addjText;
    private javax.swing.JLabel emailLable;
    private javax.swing.JTextField emailjText;
    private javax.swing.JLabel mobileLable;
    private javax.swing.JTextField mobilejText;
    private javax.swing.JLabel nameLable;
    private javax.swing.JTextField nameTjext;
    private javax.swing.JButton updatejButton;
    // End of variables declaration//GEN-END:variables
}
