/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import GlobalEcoSystem.Driver.Driver;
import GlobalEcoSystem.EcoSystem;
import GlobalEcoSystem.Driver.DriverDirectory;
import GlobalEcoSystem.Employee.Employee;
import GlobalEcoSystem.Role.DriverRole;
import GlobalEcoSystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class addDriver extends javax.swing.JPanel {

    /**
     * Creates new form addDriver
     */
     private JPanel userProcessContainer; 
    private EcoSystem ecosystem; 
    private DriverDirectory driverDirectory;
    public addDriver(JPanel userProcessContainer,EcoSystem ecosystem,DriverDirectory driverDirectory) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.driverDirectory = ecosystem.getDriverDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        carLabel = new javax.swing.JLabel();
        modelText = new javax.swing.JTextField();
        seatsLabel = new javax.swing.JLabel();
        seatsjText = new javax.swing.JTextField();
        mobileLabel = new javax.swing.JLabel();
        mobilejText = new javax.swing.JTextField();
        addLabel = new javax.swing.JLabel();
        addjText = new javax.swing.JTextField();
        UILabel = new javax.swing.JLabel();
        UIText = new javax.swing.JTextField();
        pwdLabel = new javax.swing.JLabel();
        addjButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        NameLabel1 = new javax.swing.JLabel();
        namejText1 = new javax.swing.JTextField();
        emailLabel1 = new javax.swing.JLabel();
        emailText1 = new javax.swing.JTextField();
        pwdjText = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(36, 35, 41));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Driver Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 380, 50));

        carLabel.setText("Car Model:");
        add(carLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 80, -1));
        add(modelText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, 220, 30));

        seatsLabel.setText("No. of seats:");
        add(seatsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 80, -1));
        add(seatsjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 550, 220, 30));

        mobileLabel.setText("Mobile:");
        add(mobileLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 80, -1));
        add(mobilejText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, 220, 30));

        addLabel.setText("Address:");
        add(addLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 380, 80, -1));

        addjText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjTextActionPerformed(evt);
            }
        });
        add(addjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 400, 220, 30));

        UILabel.setText("User Name:");
        add(UILabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 600, 80, -1));
        add(UIText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 620, 220, 30));

        pwdLabel.setText("Password:");
        add(pwdLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 670, 80, -1));

        addjButton.setBackground(new java.awt.Color(0, 102, 204));
        addjButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addjButton.setForeground(new java.awt.Color(255, 255, 255));
        addjButton.setText("Add Details");
        addjButton.setBorderPainted(false);
        addjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButtonActionPerformed(evt);
            }
        });
        add(addjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 750, 170, 40));

        backButton.setBackground(new java.awt.Color(255, 255, 255));
        backButton.setForeground(new java.awt.Color(0, 102, 204));
        backButton.setText("<< BACK");
        backButton.setBorderPainted(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 810, -1, -1));

        NameLabel1.setText("Name:");
        add(NameLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 80, -1));
        add(namejText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 220, 30));

        emailLabel1.setText("Email:");
        add(emailLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 80, -1));
        add(emailText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 220, 30));
        add(pwdjText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 690, 220, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void addjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButtonActionPerformed
        // TODO add your handling code here:
          String mobile = mobilejText.getText();
        String email = emailText1.getText();
        String model = modelText.getText();
        String seats = seatsjText.getText();
        String userName = UIText.getText();
        String password = pwdjText.getText();
        
        
         for(Driver driver : driverDirectory.getDriverDirectory()) {
           
            if(driver.getMobile().equals(mobile)) {
                JOptionPane.showMessageDialog(null, "Mobile Number already exists");
            }
        }
         for(Driver driver : driverDirectory.getDriverDirectory()) {
           
            if(driver.getEmail().equals(email)) {
                JOptionPane.showMessageDialog(null, "Email already exists");
            }
        }
         
            for(UserAccount account : ecosystem.getUserAccountDirectory().getUserAccountList()) {
            if(account.getUsername().equals(userName)) {
                JOptionPane.showMessageDialog(null, "Username Already exists");
                return;
            }
        }
        
        if (namejText1.getText().isEmpty() || !namejText1.getText().matches("^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$"))
          JOptionPane.showMessageDialog(null, "Please enter valid name");
        
        
        else if(!(mobilejText.getText().length()==10) || !mobilejText.getText().matches("^[0-9]+") || mobilejText.getText().matches("[0]{10}"))
        JOptionPane.showMessageDialog(null, "enter valid mobile number");
        
      
       
        else if(emailText1.getText().isEmpty()|| !(emailText1.getText().trim().contains("@") && emailText1.getText().trim().contains(".")))
          JOptionPane.showMessageDialog(null, "Enter valid email address");
       
       
        else if (addjText.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please enter address");
        }
        
        else if (modelText.getText().isEmpty()){
          JOptionPane.showMessageDialog(null, "Please enter model");
        }
        else if (seatsjText.getText().isEmpty() || !seatsjText.getText().matches("^[0-9]+"))
          JOptionPane.showMessageDialog(null, "Please enter valid seats");
        
        else if (userName.isEmpty() || !userName.matches("^[a-zA-Z0-9]*$"))
          JOptionPane.showMessageDialog(null, "Please enter userName");
        
        else if (password.isEmpty() || !password.matches("^[a-zA-Z0-9]*$"))
          JOptionPane.showMessageDialog(null, "Please enter password");
        
     
        else
           {
                   JOptionPane.showMessageDialog(null, "Driver Profile Created");
                   
        ecosystem.getDriverDirectory().addDriver(userName, namejText1.getText(), email, mobile, addjText.getText(), modelText.getText(), Integer.parseInt(seatsjText.getText()));
        Employee employee = ecosystem.getEmployeeDirectory().createEmployee(namejText1.getText());
        UserAccount userAccount = ecosystem.getUserAccountDirectory().createUserAccount(userName, password, employee, new DriverRole());
           }
    }//GEN-LAST:event_addjButtonActionPerformed

    private void addjTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addjTextActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
    userProcessContainer.remove(this);
    Component[] componentArray = userProcessContainer.getComponents();
    Component component = componentArray[componentArray.length - 1];
    manageDriver driver = (manageDriver) component;
    driver.populateTable();
    CardLayout layout = (CardLayout) userProcessContainer.getLayout();
    layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NameLabel1;
    private javax.swing.JLabel UILabel;
    private javax.swing.JTextField UIText;
    private javax.swing.JLabel addLabel;
    private javax.swing.JButton addjButton;
    private javax.swing.JTextField addjText;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel carLabel;
    private javax.swing.JLabel emailLabel1;
    private javax.swing.JTextField emailText1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField mobilejText;
    private javax.swing.JTextField modelText;
    private javax.swing.JTextField namejText1;
    private javax.swing.JLabel pwdLabel;
    private javax.swing.JPasswordField pwdjText;
    private javax.swing.JLabel seatsLabel;
    private javax.swing.JTextField seatsjText;
    // End of variables declaration//GEN-END:variables
}
