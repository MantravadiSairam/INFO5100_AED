/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplyAdminRole;

import GlobalEcoSystem.EcoSystem;
import GlobalEcoSystem.Grocer.Grocer;
import GlobalEcoSystem.Grocer.GrocerDirectory;
import GlobalEcoSystem.GroceryMenu.GMenu;
import GlobalEcoSystem.GroceryMenu.GMenuDirectory;

import GlobalEcoSystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public class ManageMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageHotelMenu
     */
      private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private GrocerDirectory grocerDirectory;
    private GMenuDirectory gmenuDirectory;
    private Grocer grocer;
    public ManageMenuJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecoSystem, 
                             GrocerDirectory grocerDirectory, GMenuDirectory gmenuDirectory) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.ecoSystem = ecoSystem;
        this.grocerDirectory = ecoSystem.getGrocerDirectory();
        this.gmenuDirectory = ecoSystem.getgMenuDirectory();
        populateTable();
    }
    
    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) itemprice.getModel();
        dtm.setRowCount(0);
        for(GMenu menu : gmenuDirectory.getGmenuDirectory()){
            if(menu.getGrocerName().equals(account.getEmployee().getName())) {
                Object [] row = new Object[2];
                row[0] = menu;
                row[1] = menu.getPrice();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        itemprice = new javax.swing.JTable();
        BackjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        itemJText = new javax.swing.JTextField();
        priceJText = new javax.swing.JTextField();
        JaddButton = new javax.swing.JButton();
        itemslist = new javax.swing.JLabel();
        CreateMenu = new javax.swing.JLabel();
        deletejButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(36, 35, 39));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        itemprice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Price"
            }
        ));
        jScrollPane1.setViewportView(itemprice);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 257, 128));

        BackjButton.setBackground(new java.awt.Color(255, 255, 255));
        BackjButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        BackjButton.setForeground(new java.awt.Color(0, 0, 0));
        BackjButton.setText("<< BACK");
        BackjButton.setBorderPainted(false);
        BackjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackjButtonActionPerformed(evt);
            }
        });
        add(BackjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 620, -1, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Item:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 70, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Price:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 70, -1));
        add(itemJText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 260, 30));

        priceJText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceJTextActionPerformed(evt);
            }
        });
        add(priceJText, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 260, 30));

        JaddButton.setBackground(new java.awt.Color(0, 102, 204));
        JaddButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        JaddButton.setForeground(new java.awt.Color(255, 255, 255));
        JaddButton.setText("Add Item");
        JaddButton.setBorderPainted(false);
        JaddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JaddButtonActionPerformed(evt);
            }
        });
        add(JaddButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 150, 50));

        itemslist.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        itemslist.setForeground(new java.awt.Color(255, 255, 255));
        itemslist.setText("Items List");
        add(itemslist, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 80, -1));

        CreateMenu.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        CreateMenu.setForeground(new java.awt.Color(255, 255, 255));
        CreateMenu.setText("Create Menu");
        add(CreateMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, -1));

        deletejButton.setBackground(new java.awt.Color(204, 0, 0));
        deletejButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        deletejButton.setForeground(new java.awt.Color(255, 255, 255));
        deletejButton.setText("Delete Item");
        deletejButton.setBorderPainted(false);
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });
        add(deletejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 570, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BackjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackjButtonActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackjButtonActionPerformed

    private void priceJTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceJTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceJTextActionPerformed

    private void JaddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JaddButtonActionPerformed
        // TODO add your handling code here:
        
        if(itemJText.getText().isEmpty() || priceJText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty");
            return;
        }
        
        String itemName = itemJText.getText();
        double price;
        try {
            price = Double.parseDouble(priceJText.getText());
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Price must be float or Integer value");
            return;
        }
        
        String res = account.getEmployee().getName();
        
        gmenuDirectory.newItem(itemName, price, res);
        populateTable();
    }//GEN-LAST:event_JaddButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
                  int selectedRow = itemprice.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warining", JOptionPane.WARNING_MESSAGE);
            return;
        }

        GMenu menu = (GMenu) itemprice.getValueAt(selectedRow, 0);
        gmenuDirectory.removeMenu(menu);
        populateTable();
    }//GEN-LAST:event_deletejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackjButton;
    private javax.swing.JLabel CreateMenu;
    private javax.swing.JButton JaddButton;
    private javax.swing.JButton deletejButton;
    private javax.swing.JTextField itemJText;
    private javax.swing.JTable itemprice;
    private javax.swing.JLabel itemslist;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField priceJText;
    // End of variables declaration//GEN-END:variables
}
